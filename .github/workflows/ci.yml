on: [push, pull_request]

# Stops the running workflow of previous pushes
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

name: Continuous Integration

jobs:
  lint-rustfmt:
    name: Running lint - rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt
      - uses: davidB/rust-cargo-make@v1
      - name: Rustfmt
        # we don't use the check-format-ci-flow because it requires nightly (cargo-make)
        run: cargo make check-format-flow
  lint-clippy:
    name: Running lint - clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy
      - uses: davidB/rust-cargo-make@v1
      - name: Run Clippy
        # we don't use the clippy-ci-flow because it requires nightly (cargo-make)
        run: cargo make clippy-flow
  check-docs:
    name: Rustdoc build check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rust-docs
      - name: Build docs with no features
        run: cargo doc --workspace --no-deps --no-default-features
      - name: Build docs with --all-features
        run: cargo doc --workspace --no-deps --all-features
  test-flow:
    name: cargo make ci-flow - Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      # Runs all services needed for testing
      - name: run docker-compose
        uses: sudo-bot/action-docker-compose@latest
        with:
          # https://docs.docker.com/compose/reference/overview/
          cli-args: "-f docker-compose.harness.yml up -d --build"
      - uses: actions-rs/toolchain@v1
        with:
          # No need to add `toolchain`, it will use `rust-toolchain` file instead
          profile: minimal
      - uses: davidB/rust-cargo-make@v1
      - name: Run `cargo make ci-flow`
        # Running cargo make doesn't successfully start `ganache`
        run: |
          cargo make ci-flow